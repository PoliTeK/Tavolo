/* Codice Arduino per visualizzare il logo politek sul modulo display oled 
   e controllare il modulo display 7 seg 4 digit in modo randomico.
   Se i pin 0,1 o 13 vengono portati a livello alto aumenta la frequenza con cui cambia i numeri */


#include <Adafruit_GFX.h>
#include <Wire.h>
#include <Adafruit_SSD1306.h>

// Pin 2-8 is connected  to the 7 segments of the display.

#define pinA 2
#define pinB 3
#define pinC 4
#define pinD 5
#define pinE 6
#define pinF 7
#define pinG 8
#define D1 9
#define D2 10
#define D3 11
#define D4 12
// Pin for input signal
#define pianta_1 0
#define pianta_2 1
#define pianta_3 13

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
#define OLED_RESET -1
#define SCREEN_ADDRESS 0x3C

static const uint8_t PROGMEM logo_PoliTek[1024]{
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xfd, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe3, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0xe3, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0x8f, 0xc3, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x67, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfe, 0x3f, 0xf8, 0xff, 0xff, 0xff, 0xff, 0x81, 0xfe, 0x07, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xf8, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xfe, 0x0f, 0xff, 0x87, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xe6, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0x9f, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xe6, 0x7f, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xef, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xe7, 0x3f, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xff, 0xff, 0xc0, 0x1f, 0xff, 0xe7, 0x1f, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x03, 0xfe, 0xff, 0xe2, 0x7f, 0x00, 0x00, 0x03, 0xff, 0xe7, 0x1f, 0xff, 0xff, 
	0xff, 0xfc, 0x00, 0x00, 0x3c, 0xff, 0xf8, 0x7e, 0x00, 0x00, 0x0f, 0xc7, 0xc7, 0x9f, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0x1c, 0xff, 0xfe, 0x3e, 0x3f, 0x1f, 0xff, 0xe6, 0x07, 0xcf, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x7f, 0xc4, 0x7f, 0xfe, 0x3f, 0x7f, 0x1f, 0xff, 0xe4, 0x1f, 0xcf, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x3f, 0xf0, 0x7f, 0xfe, 0x3f, 0xff, 0x1f, 0x83, 0xe0, 0x7f, 0xc7, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x3f, 0xf8, 0x7e, 0x3e, 0x3f, 0xff, 0x3e, 0x01, 0xe1, 0xff, 0xe7, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0x7f, 0xfc, 0x70, 0x0e, 0x3e, 0x3f, 0x3c, 0x78, 0xe3, 0xff, 0xe7, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0x7f, 0xfe, 0x63, 0xc7, 0x3e, 0x3f, 0x3c, 0xfc, 0x67, 0xff, 0xe7, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0x7e, 0xfe, 0x67, 0xf7, 0x3e, 0x3f, 0x38, 0xfc, 0x67, 0xff, 0xe7, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0x7e, 0x7e, 0x67, 0xf6, 0x3f, 0x3f, 0x38, 0x00, 0x67, 0xff, 0xe7, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0x7e, 0x7e, 0x67, 0xf3, 0x3f, 0x3f, 0x38, 0x7f, 0xe7, 0xff, 0xe7, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0x7e, 0x7e, 0x67, 0xe7, 0x3f, 0x3f, 0x1d, 0xff, 0xe7, 0xff, 0xe7, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0x7e, 0x7e, 0x67, 0xe7, 0x3f, 0x3f, 0x1c, 0xfc, 0xe7, 0xff, 0xe7, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0x7e, 0x78, 0x71, 0xcf, 0x3f, 0x3f, 0x1c, 0x78, 0xe1, 0xff, 0xe7, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0x7e, 0x70, 0x78, 0x1f, 0x3f, 0x3f, 0x1f, 0x03, 0xe0, 0xff, 0xe7, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0x7e, 0x40, 0x7f, 0xff, 0x3f, 0x7f, 0x3f, 0xcf, 0xe0, 0x3f, 0xc7, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x3e, 0x0e, 0x7f, 0xff, 0x7f, 0xff, 0x3f, 0xff, 0xe6, 0x1f, 0xcf, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x3e, 0x1e, 0x7f, 0xfd, 0x3f, 0xff, 0xbf, 0xff, 0xe7, 0x8f, 0xcf, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xbe, 0x7f, 0xff, 0xf9, 0x3f, 0xff, 0xf3, 0xff, 0xef, 0xcf, 0x9f, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x9e, 0x7f, 0xff, 0xf3, 0xcf, 0xff, 0xf3, 0xff, 0xff, 0xef, 0x1f, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x8e, 0x7f, 0xff, 0xe3, 0xe3, 0xff, 0xf1, 0xff, 0xff, 0xe6, 0x3f, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xc6, 0x7f, 0xff, 0xc7, 0xf1, 0xff, 0xf8, 0xff, 0xff, 0xe4, 0x7f, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe2, 0x7f, 0xff, 0x9f, 0xf8, 0x7f, 0xfc, 0x7f, 0xff, 0xe4, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfe, 0x7f, 0xfe, 0x3f, 0xfe, 0x00, 0x3e, 0x1f, 0xff, 0xe7, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfe, 0x7f, 0xe0, 0x7f, 0xff, 0xff, 0xff, 0x07, 0xfe, 0xe7, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfe, 0x40, 0x01, 0xff, 0xff, 0xff, 0xff, 0xc0, 0xe0, 0xe7, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfe, 0x60, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x03, 0xe7, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff

};

Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

/*
  Showing number 0-9 on a Common Anode 7-segment LED display
  Displays the numbers 0-9 on the display, with one second inbetween.
    A
   ---
F |   | B
  | G |
   ---
E |   | C
  |   |
   ---
    D
  This example code is in the public domain.
 */

int N = 200; // Variabile per il delay
 

// the setup routine  runs once when you press reset:
void setup() {                
  // display PoliTeK
  Serial.begin(115200);
  // Inizializza display con controllo di errore
  if (!display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS)) {
    Serial.println(F("SSD1306 allocation failed"));
    for (;;);
  }
  
  // Cancella il display
  display.clearDisplay();
  
  // Disegna il logo
  display.drawBitmap(0, 0, logo_PoliTek, 128, 64, 1);
  display.display();
  delay(2000);

  Serial.println(F("Logo visualizzato"));

  // end display PoliTeK

  // initialize  the digital pins as outputs.
  pinMode(pinA, OUTPUT);     
  pinMode(pinB,  OUTPUT);     
  pinMode(pinC, OUTPUT);     
  pinMode(pinD, OUTPUT);     
  pinMode(pinE, OUTPUT);     
  pinMode(pinF, OUTPUT);     
  pinMode(pinG,  OUTPUT);   
  pinMode(D1, OUTPUT);  
  pinMode(D2, OUTPUT);  
  pinMode(D3,  OUTPUT);  
  pinMode(D4, OUTPUT);  

  // initialize the input pin as input
  pinMode(pianta_1, INPUT); 
  pinMode(pianta_2, INPUT);
  pinMode(pianta_3, INPUT);
}

// the loop routine runs over and over again forever:
void loop() {
  int ON_1 = digitalRead(pianta_1);
  int ON_2 = digitalRead(pianta_2);
  int ON_3 = digitalRead(pianta_3);

  char buff[4];
  sprintf(buff, "%d%d%d", ON_1, ON_2, ON_3);
  Serial.print(buff);

  // Read the input pin
  if (ON_1 == HIGH || ON_2 == HIGH || ON_3 == HIGH ) {
    N=50;
  }
  else N=200;   

  switch (random (0,9)){
  case 0:
  digitalWrite(D1, LOW);
  digitalWrite(D2,  HIGH);
  digitalWrite(D3, HIGH);
  digitalWrite(D4, HIGH); 
    
    //7
  digitalWrite(pinA, HIGH);
  digitalWrite(pinB, HIGH);
  digitalWrite(pinC, HIGH);
  digitalWrite(pinD, LOW);
  digitalWrite(pinE, LOW);
  digitalWrite(pinF, LOW);
  digitalWrite(pinG, LOW);

  delay(N);               
  break;
  case 1:
  digitalWrite(D1, HIGH);
  digitalWrite(D2, LOW);
  digitalWrite(D3,  HIGH);
  digitalWrite(D4, HIGH); 

    //4
  digitalWrite(pinA, LOW);  
  digitalWrite(pinB, HIGH);  
  digitalWrite(pinC, HIGH);  
  digitalWrite(pinD, LOW);  
  digitalWrite(pinE, LOW);  
  digitalWrite(pinF, HIGH);  
  digitalWrite(pinG, HIGH);
  


  delay(N);               // wait for a second

  break;

  case 2:
    
  digitalWrite(D1, HIGH);
  digitalWrite(D2, HIGH);
  digitalWrite(D3,  LOW);
  digitalWrite(D4, HIGH); 
    //1
  digitalWrite(pinA, LOW);
  digitalWrite(pinB, HIGH);
  digitalWrite(pinC, HIGH);
  digitalWrite(pinD, LOW);
  digitalWrite(pinE, LOW);
  digitalWrite(pinF, LOW);
  digitalWrite(pinG, LOW);


  delay(N);               // wait for a second

  break;

  case 3:

  digitalWrite(D1, HIGH);
  digitalWrite(D2, HIGH);
  digitalWrite(D3, HIGH);
  digitalWrite(D4, LOW); 
    //1
  digitalWrite(pinA, LOW);
  digitalWrite(pinB, HIGH);
  digitalWrite(pinC, HIGH);
  digitalWrite(pinD, LOW);
  digitalWrite(pinE, LOW);
  digitalWrite(pinF, LOW);
  digitalWrite(pinG, LOW);

  delay(N);               // wait for a second

  break;

  case 4:

  digitalWrite(D1, LOW);
  digitalWrite(D2,  HIGH);
  digitalWrite(D3, HIGH);
  digitalWrite(D4, HIGH); 

    //4
  digitalWrite(pinA, LOW);
  digitalWrite(pinB, HIGH);
  digitalWrite(pinC, HIGH);
  digitalWrite(pinD, LOW);
  digitalWrite(pinE, LOW);
  digitalWrite(pinF, HIGH);
  digitalWrite(pinG, HIGH);
  
  delay(N);               // wait for a second

  break;

  case 5:
    
  digitalWrite(D1, HIGH);
  digitalWrite(D2,  LOW);
  digitalWrite(D3, HIGH);
  digitalWrite(D4, HIGH); 

    //1
  digitalWrite(pinA, LOW);
  digitalWrite(pinB, HIGH);
  digitalWrite(pinC, HIGH);
  digitalWrite(pinD, LOW);
  digitalWrite(pinE, LOW);
  digitalWrite(pinF, LOW);
  digitalWrite(pinG, LOW);

    
  delay(N);               // wait for a second

  break;

  case 6:

  digitalWrite(D1, HIGH);
  digitalWrite(D2,  HIGH);
  digitalWrite(D3, LOW);
  digitalWrite(D4, HIGH); 
    
     //4
  digitalWrite(pinA, LOW);  
  digitalWrite(pinB, HIGH);  
  digitalWrite(pinC, HIGH);  
  digitalWrite(pinD, LOW);  
  digitalWrite(pinE, LOW);  
  digitalWrite(pinF, HIGH);  
  digitalWrite(pinG, HIGH);

  delay(N);               // wait for a second

  break;

  case 7:

  digitalWrite(D1, HIGH);
  digitalWrite(D2,  HIGH);
  digitalWrite(D3, HIGH);
  digitalWrite(D4, LOW); 
    
    //7
  digitalWrite(pinA, HIGH);
  digitalWrite(pinB, HIGH);
  digitalWrite(pinC, HIGH);
  digitalWrite(pinD, LOW);
  digitalWrite(pinE, LOW);
  digitalWrite(pinF, LOW);
  digitalWrite(pinG, LOW);
      
  delay(N);               // wait for a second

  break;

  case 8:

  digitalWrite(D1, LOW);
  digitalWrite(D2,  HIGH);
  digitalWrite(D3, HIGH);
  digitalWrite(D4, HIGH); 
    
    //4
  digitalWrite(pinA, LOW);  
  digitalWrite(pinB, HIGH);  
  digitalWrite(pinC, HIGH);  
  digitalWrite(pinD, LOW);  
  digitalWrite(pinE, LOW);  
  digitalWrite(pinF, HIGH);  
  digitalWrite(pinG, HIGH);
      
  delay(N);               // wait for a second

  break;

  case 9:

  digitalWrite(D1, HIGH);
  digitalWrite(D2,  HIGH);
  digitalWrite(D3, LOW);
  digitalWrite(D4, HIGH); 

    //7
  digitalWrite(pinA, HIGH);
  digitalWrite(pinB, HIGH);
  digitalWrite(pinC, HIGH);
  digitalWrite(pinD, LOW);
  digitalWrite(pinE, LOW);
  digitalWrite(pinF, LOW);
  digitalWrite(pinG, LOW);

      
  delay(N);               // wait for a second

  break;

  default:
  digitalWrite(D1, LOW);
  digitalWrite(D2,  LOW);
  digitalWrite(D3, LOW);
  digitalWrite(D4, LOW); 

    //4
  digitalWrite(pinA, LOW);  
  digitalWrite(pinB, HIGH);  
  digitalWrite(pinC, HIGH);  
  digitalWrite(pinD, LOW);  
  digitalWrite(pinE, LOW);  
  digitalWrite(pinF, HIGH);  
  digitalWrite(pinG, HIGH);  
  break;
  }

}
